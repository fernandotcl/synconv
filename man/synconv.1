.TH SYNCONV 1 2011-09-26 "synconv" "synconv Manual"
.SH NAME
synconv \- A command line based multimedia tagger
.SH SYNOPSIS
.B synconv [\fIoptions\fR] \fIfile_or_dir\fR [\fIfile_or_dir\fR] ... \fIoutput_dir\fR
.SH DESCRIPTION
synconv is a command line based audio format transcoder with an \fBrsync\fR(1)\-like behavior. It creates transcoding pipelines when that are run in parallel and can copy other files as well. By checking timestamps, it can decide whether or not to skip copying or transcoding for certain files, making it easy to keep audio files synchronized between devices of different audio playing capabilities.

The input files and directories are copied to the output directory. With recursive transversal, the file hierarchy of the input directories is mirrored. The input files are transcoded if needed, or may otherwise be copied.
.SH OPTIONS
.TP 30
.B \-C\fR/\fB\-\-dont\-copy\-others
Don't copy files that aren't being transcoded
.TP
.B \-F\fR/\fB\-\-flac\-option \fIoption
Add \fIoption\fR to the list of command line arguments specified for the FLAC encoder
.TP
.B \-L\fR/\fB\-\-lame\-option \fIoption
Add \fIoption\fR to the list of command line arguments specified for the LAME encoder
.TP
.B \-N\fR/\fB\-\-renaming\-filter \fIfilter
Set the renaming filter to \fIfilter\fR, which must be one of: \fIconservative\fR (a conservative filter, recommended when working with FAT32 filesystems) or \fInone\fR (don't use a renaming filter, default if not specified)
.TP
.B \-R\fR/\fB\-\-dont\-recurse
Don't recurse into input directories
.TP
.B \-V\fR/\fB\-\-vorbis\-option \fIoption
Add \fIoption\fR to the list of command line arguments specified for the Ogg Vorbis encoder (oggenc)
.TP
.B \-e\fR/\fB\-\-encoder \fIname
Set the encoder to \fIname\fR, which must be one of: \fIflac\fR (encodes into the FLAC format), \fIlame\fR (encodes into the MP3 format, default if not specified) or \fIvorbis\fR (encodes into the Ogg Vorbis format)
.TP
.B \-h\fR/\fB\-\-help
Display usage information and exit
.TP
.B \-o\fR/\fB\-\-overwrite\-mode \fImode
Set the overwrite mode to \fImode\fR, which must be one of: \fIalways\fR (always overwrites existing files), \fIauto\fR (overwrites only if the output file is older than the input file, default if not specified) or \fInever\fR (never overwrites existing files)
.TP
.B \-q\fR/\fB\-\-quiet
Don't output informational messages
.TP
.B \-r\fR/\fB\-\-reencode
Re-encode files that are already encoded in the format of the selected encoder
.TP
.B \-t\fR/\fB\-\-threads \fInum
Use \fInum\fR worker threads for parallel transcoding (defaults to \fI1\fR, but you probably want to match it to the number of processing cores in your machine for optimal performance)
.TP
.B \-v\fR/\fB\-\-verbose
Increase the verbosity of informational messages
.SH TRAILING SLASHES
The handling of trailing slashes should work exactly like in \fBrsync\fR(1). Some examples borrowed from \fBrsync\fR(1):

.RS 
\f(CWsynconv src/bar /data/tmp\fP
.RE

.PP 
This would recursively copy or transcode all files from the directory src/bar into the /data/tmp/bar directory.
.PP 
.RS 
\f(CWsynconv src/bar/ /data/tmp\fP
.RE

.PP 
A trailing slash on the input directories changes this behavior to avoid creating an additional directory level at the destination. You can think of a trailing on an input directory as meaning \(dq\&copy or transcode the contents of this directory\(dq\& as opposed to \(dq\&copy or transcode the directory and its contents by name\(dq\&. In other words, each of the following commands copies or transcodes the files in the same way:
.PP 
.RS 
\f(CWsynconv /src/foo /dest\fP
.br 
\f(CWsynconv /src/foo/ /dest/foo\fP
.br 
.RE
.SH EXAMPLE
Typical usage scenario, synchronizing audio files with a device that can only handle the MP3 format. Existing MP3 files will not be re\-encoded. Command line switches will be passed to the lame encoder so that FLAC and Ogg Vorbis files will be encoded using high\-quality variable bitrate (\-V2) and higher quality encoding (\-h). The output files will be stored in a mounted FAT32 filesystem. Assuming a quad\-core computer is being used, 4 worker threads will be launched:

.nf
$ synconv \-L\-V2 \-L\-h \-t4 \-Nconservative /music/ /media/my_device/music
.fi

Transcoding files to low\-quality Ogg Vorbis, re\-encoding existing files. Never overwriting existing files. Assuming a dual\-core computer is being used, 2 worker threads will be launched:

.nf
$ synconv \-e vorbis \-V\-q1 \-t2 \-onever /path/to/foo /path/to/bar
.fi
.SH SEE ALSO
.B flac\fR(1),
.B lame\fR(1),
.B oggdec\fR(1),
.B oggenc\fR(1),
.B rsync\fR(1)
